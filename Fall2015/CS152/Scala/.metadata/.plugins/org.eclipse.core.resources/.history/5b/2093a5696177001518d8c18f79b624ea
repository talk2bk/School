object midtermSession {
  println("Welcome to the Scala worksheet")       //> Welcome to the Scala worksheet
 //2.
 def approxZero(num: Any): Boolean = num.asInstanceOf[Comparable[Any]].compareTo(0.1) < 0 && num.asInstanceOf[Comparable[Any]].compareTo(-0.1) > 0
                                                  //> approxZero: (num: Any)Boolean
 def self(num: Double): Double = num              //> self: (num: Double)Double
 
def countRoots[T](f: T => Double, inputs: List[T]) = inputs.map(f).filter(approxZero _).length
                                                  //> countRoots: [T](f: T => Double, inputs: List[T])Int
val numbers = List(0.01, 0.1, 1, 0.001, -0.001, -1)
                                                  //> numbers  : List[Double] = List(0.01, 0.1, 1.0, 0.001, -0.001, -1.0)
val numbers2 = List(0.001, 0.00001, 0.0001, 0.01) //> numbers2  : List[Double] = List(0.001, 1.0E-5, 1.0E-4, 0.01)
val numbers3 = List(1.0,2,3,4,5)                  //> numbers3  : List[Double] = List(1.0, 2.0, 3.0, 4.0, 5.0)
countRoots(self, numbers)                         //> res0: Int = 3
countRoots(self, numbers2)                        //> res1: Int = 4
countRoots(self, numbers3)                        //> res2: Int = 0

//3.
def fact(n: Int): Int = if(n ==0) 1 else n*fact(n-1)
                                                  //> fact: (n: Int)Int

//def recur(base: Int, combiner: (Int, Int) => Int): Int => Int = {}

//4.
def some(vals: List[Int], test: Int => Boolean): Boolean = {
def helper(vals2: List[Int], test2: Int =>Boolean, pass: Boolean): Boolean = {if(pass) return true else helper(vals2.tail, test2, test2(vals2.head))}
helper(vals,test,false)
}                                                 //> some: (vals: List[Int], test: Int => Boolean)Boolean

some(List(1, 3, 5, 7), (n: Int)=> n % 2 == 0)     //> java.lang.UnsupportedOperationException: tail of empty list
                                                  //| 	at scala.collection.immutable.Nil$.tail(List.scala:422)
                                                  //| 	at scala.collection.immutable.Nil$.tail(List.scala:417)
                                                  //| 	at midtermSession$$anonfun$main$1.helper$1(midtermSession.scala:22)
                                                  //| 	at midtermSession$$anonfun$main$1.some$1(midtermSession.scala:23)
                                                  //| 	at midtermSession$$anonfun$main$1.apply$mcV$sp(midtermSession.scala:26)
                                                  //| 
                                                  //| 	at org.scalaide.worksheet.runtime.library.WorksheetSupport$$anonfun$$exe
                                                  //| cute$1.apply$mcV$sp(WorksheetSupport.scala:76)
                                                  //| 	at org.scalaide.worksheet.runtime.library.WorksheetSupport$.redirected(W
                                                  //| orksheetSupport.scala:65)
                                                  //| 	at org.scalaide.worksheet.runtime.library.WorksheetSupport$.$execute(Wor
                                                  //| ksheetSupport.scala:75)
                                                  //| 	at midtermSession$.main(midtermSession.scala:1)
                                                  //| 	at midtermSession.main(midtermSession.scala)
some(List(1, 3, 5, 8), (n: Int)=> n % 2 == 0)



}