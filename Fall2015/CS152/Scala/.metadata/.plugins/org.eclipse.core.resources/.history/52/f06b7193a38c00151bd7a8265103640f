class Lex {
  trait Expression { def execute}
  
  case class Number(val value: Double) extends Expression{
    def execute = value
  }
  
}

object Lex extends App {
 
  val plus = "+"
  val times = "*"
  def execute(e: Expression) = e.execute
 
  val exp1 = FunCall(Number(3.14), plus, Number(2.71)) // 3.14 + 2.71
  println(execute(exp1))// prints 5.85
  
  val exp2 = FunCall(Number(5.0), times, exp1) // 5.0 * (3.14 + 2.71)
  println(execute(exp2)) // prints 29.25
 
}