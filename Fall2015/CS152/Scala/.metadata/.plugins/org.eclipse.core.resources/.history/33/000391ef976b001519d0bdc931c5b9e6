object recursionSession {
  println("Welcome to the Scala worksheet")
  def inc(n: Int) = n + 1
  def dec(n: Int) = n - 1
  //5.
  //n + m
  def add(n: Int, m: Int) = {
  
  def addHelp(n: Int, count: Int): Int = if(count <= 0) n else addHelp(inc(n), dec(count))
  
  addHelp(n,m)
  }
   
  add(1,2)
  add(2,3)
  add(3,4)
   
  //n * m
  def mul(n: Int, m: Int) = {
  
  def mulHelp(result: Int, count: Int): Int = if(count <= 0) result else mulHelp(add(result,n), dec(count))
  
  mulHelp(n,dec(m)) 
  }
  
  mul(1,2)
  mul(2,3)
  mul(3,4)
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  /*
    //9.
  //recursive
  def fib1(n: Int): Int = {
  if(n <= 1) 1 else fib1(n-1) + fib1(n-2)
  }
  
  //iterative
  def fib2(n: Int) = {
  var fib1 = 1
  var fib2 = 1
  for(i <- 1 until n){
  var temp = fib2;
  fib2 = fib2+fib1;
  fib1 = temp;
  }
  fib2
  }
  
  //tail
  def fib3(n: Int) = {
  	def helper(fib1: Int, fib2: Int, i: Int): Int = {
  	if(i >= n) fib2 else helper(fib2, fib2+fib1, i + 1)
  	}
  	helper(1,1,n)
  }
 
 for(i <- 0 to 10){
 println(fib3(i))
   }
  
  */
  
  
  
  
  
  
  
  
  
  
  
  
  

}