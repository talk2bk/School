object midtermSession {
  println("Welcome to the Scala worksheet")       //> Welcome to the Scala worksheet
 def approxZero(num: Any): Boolean = num.asInstanceOf[Comparable[Any]].compareTo(0.1) < 0 && num.asInstanceOf[Comparable[Any]].compareTo(-0.1) > 0
                                                  //> approxZero: (num: Any)Boolean
 def self(num: Double): Double = num              //> self: (num: Double)Double
 
def countRoots[T](f: T => Double, inputs: List[T]) = inputs.map(f).filter(approxZero _).length
                                                  //> countRoots: [T](f: T => Double, inputs: List[T])Int
val numbers = List(0.01, 0.1, 1, 0.001, -0.001, -1)
val numbers2 = List(0.001, 0.00001, 0.0001, 0.01)
val numbers3 = List(1.0,2,3,4,5)
                                                  //> numbers  : List[Double] = List(0.01, 0.1, 1.0, 0.001, -0.001, -1.0)
countRoots(self, numbers)                         //> res0: Int = 3
countRoots(self, numbers2)
countRoots(self, numbers3)










}